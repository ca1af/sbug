plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// data
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-messaging'

	// web, websocket
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// Stomp-websocket
	implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.3-1'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// PostgreSQL 의존성 추가
	implementation 'org.postgresql:postgresql:42.2.27'

	// h2 DB(for test)
//	runtimeOnly 'com.h2database:h2'

	//JWT
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//	implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.1'

	// jakarta 정규식
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.2'

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws', version: '2.2.1.RELEASE', ext: 'pom'

	// aws-sdk-java-v2 (s3에 Multipart 업로드를 위함)
	implementation platform('software.amazon.awssdk:bom:2.17.53')
	implementation 'software.amazon.awssdk:s3'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka:'
	implementation 'com.google.guava:guava:31.1-jre'

	// for API Request
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.12.1'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.1'
  
  // Redis caching : entity 정보의 serialization
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'
}

	tasks.named('test') {
		useJUnitPlatform()
	}
